# ========================================
# IATRADE CRM - Docker Compose para Producción
# ========================================

version: '3.8'

services:
  # ========================================
  # NGINX - Servidor Web
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: iatrade-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html/iatrade-crm
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl/certs
      - nginx-logs:/var/log/nginx
    depends_on:
      - php-fpm
      - mysql
    networks:
      - iatrade-network
    environment:
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.template
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.iatrade.rule=Host(`your-domain.com`)"
      - "traefik.http.routers.iatrade.tls=true"
      - "traefik.http.routers.iatrade.tls.certresolver=letsencrypt"

  # ========================================
  # PHP-FPM - Procesador PHP
  # ========================================
  php-fpm:
    build:
      context: .
      dockerfile: Dockerfile.php
    container_name: iatrade-php
    restart: unless-stopped
    volumes:
      - ./:/var/www/html/iatrade-crm
      - php-logs:/var/log/php
    networks:
      - iatrade-network
    environment:
      - PHP_OPCACHE_ENABLE=1
      - PHP_OPCACHE_MEMORY_CONSUMPTION=256
      - PHP_MAX_EXECUTION_TIME=300
      - PHP_MEMORY_LIMIT=512M
      - PHP_UPLOAD_MAX_FILESIZE=10M
      - PHP_POST_MAX_SIZE=10M
    depends_on:
      - mysql
      - redis

  # ========================================
  # MySQL - Base de Datos
  # ========================================
  mysql:
    image: mysql:8.0
    container_name: iatrade-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/migrations:/docker-entrypoint-initdb.d
      - mysql-logs:/var/log/mysql
    networks:
      - iatrade-network
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=1G
      --innodb-log-file-size=256M
      --max-connections=200
      --query-cache-type=1
      --query-cache-size=64M
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=2

  # ========================================
  # Redis - Cache y Sesiones
  # ========================================
  redis:
    image: redis:alpine
    container_name: iatrade-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - iatrade-network
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  # ========================================
  # Node.js - Build del Frontend
  # ========================================
  frontend-builder:
    image: node:18-alpine
    container_name: iatrade-frontend-builder
    working_dir: /app
    volumes:
      - ./frontend:/app
    networks:
      - iatrade-network
    command: >
      sh -c "
        npm ci --only=production &&
        npm run build &&
        echo 'Frontend build completed'
      "
    environment:
      - NODE_ENV=production

  # ========================================
  # Certbot - SSL Certificates
  # ========================================
  certbot:
    image: certbot/certbot
    container_name: iatrade-certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./ssl-challenges:/var/www/certbot
    networks:
      - iatrade-network
    command: >
      sh -c "
        certbot certonly --webroot --webroot-path=/var/www/certbot
        --email admin@your-domain.com --agree-tos --no-eff-email
        -d your-domain.com -d www.your-domain.com
      "

  # ========================================
  # Backup Service
  # ========================================
  backup:
    image: alpine:latest
    container_name: iatrade-backup
    restart: unless-stopped
    volumes:
      - mysql-data:/backup/mysql
      - ./:/backup/app
      - backup-storage:/backup/storage
    networks:
      - iatrade-network
    environment:
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
      - MYSQL_HOST=mysql
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    command: >
      sh -c "
        apk add --no-cache mysql-client dcron &&
        echo '0 2 * * * /backup/backup.sh' | crontab - &&
        crond -f
      "

  # ========================================
  # Monitoring - Prometheus
  # ========================================
  prometheus:
    image: prom/prometheus
    container_name: iatrade-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - iatrade-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # ========================================
  # Monitoring - Grafana
  # ========================================
  grafana:
    image: grafana/grafana
    container_name: iatrade-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - iatrade-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false

# ========================================
# VOLÚMENES PERSISTENTES
# ========================================
volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
  nginx-logs:
    driver: local
  php-logs:
    driver: local
  mysql-logs:
    driver: local
  backup-storage:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# ========================================
# RED INTERNA
# ========================================
networks:
  iatrade-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16