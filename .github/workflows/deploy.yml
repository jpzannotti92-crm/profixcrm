name: Deploy to cPanel (FTP)

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install and build frontend
        working-directory: ./frontend
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-audit --no-fund
          fi
          npm run build

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
          coverage: none

      - name: Install PHP dependencies
        run: composer install --no-dev --prefer-dist --no-interaction --no-progress

      - name: Prepare env files from secret
        env:
          ENV_FILE: ${{ secrets.ENV_PRODUCTION }}
        run: |
          if [ -n "$ENV_FILE" ]; then
            printf "%s" "$ENV_FILE" > .env.production
            cp .env.production .env
          else
            echo "ENV_PRODUCTION secret is empty or not set" && exit 1
          fi

      - name: Sync frontend dist to public
        run: |
          mkdir -p public/assets
          if [ -f frontend/dist/index.html ]; then cp -f frontend/dist/index.html public/index.html; fi
          if [ -d frontend/dist/assets ]; then rsync -av --delete frontend/dist/assets/ public/assets/; fi

      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ${{ secrets.FTP_PROTOCOL }}
          local-dir: ./
          server-dir: ${{ secrets.FTP_DIR }}
          dangerous-clean-slate: true
          exclude: |
            **/.git/**
            **/.github/**
            **/.DS_Store
            frontend/node_modules/**
            frontend/src/**
            deployment_package/**
            **/tests/**
            **/*.md
            **/*.txt
            **/*.log
            **/*.tmp
            **/*.cache
          timeout: 600000

      - name: Post-deploy health check
        run: |
          set -e
          curl -fsSL "$HEALTH_URL" -o /dev/null
          curl -fsSL "$HEALTH_DEEP_URL" -o /dev/null || true
        env:
          HEALTH_URL: https://spin2pay.com/api/health
          HEALTH_DEEP_URL: https://spin2pay.com/api/health-deep